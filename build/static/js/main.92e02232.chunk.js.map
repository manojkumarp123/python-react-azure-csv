{"version":3,"sources":["utils.js","Loading.js","Info.js","Search.js","logic.js","File.js","constants.js","App.js","serviceWorker.js","index.js"],"names":["evalResponce","res","ok","Error","json","style","classess","center","CircularProgress","display","flex","alignItems","justifyContent","flexDirection","height","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","SimpleModal","classes","React","useState","modalStyle","open","setOpen","body","className","id","map","info","idx","key","Button","variant","onClick","Modal","onClose","aria-labelledby","aria-describedby","root","input","marginLeft","iconButton","divider","margin","CustomizedInputBase","onSearch","count","Paper","component","onSubmit","e","preventDefault","searchVal","target","search","value","toLowerCase","console","log","InputBase","name","placeholder","inputProps","IconButton","type","aria-label","Divider","orientation","get_rows","data","columns","row","reduce","acc","val","titleBar","actionItems","EmptyRowsRenderer","textAlign","App","rows","setRows","isLoading","setIsLoading","error","setError","setColumns","setData","callApi","useCallback","url","options","Object","assign","headers","fetch","then","editable","resizable","frozen","formatter","rowIdx","method","handleDelete","fontSize","concat","catch","useEffect","handleEdit","action","fromRow","toRow","updated","colName","JSON","stringify","color","initialRows","filteredRows","filter","values","cellVal","toString","indexOf","is_val_in_row","length","header","Loading","message","paddingLeft","paddingRight","DataGrid","rowHeight","onRowsUpdate","emptyRowsRenderer","File","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92e02232.chunk.js","sourcesContent":["export const evalResponce = (res) => {\n  if (!res.ok) throw Error(\"failed to fetch\");\n  return res.json();\n};\n","import React from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nexport default () => (\n  <div style={classess.center}>\n    <CircularProgress />\n  </div>\n);\n\nconst classess = {\n  center: {\n    display: \"flex\",\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 750,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function SimpleModal() {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Information</h2>\n      <ol>\n        {[\n          \"The data grid is a temporary snapshot of the cloud file.\",\n          \"The changes made will be temporary.\",\n          \"Click on Save (to cloud) to persist changes.\",\n          \"Click on Refresh (download from cloud) to reset changes on data grid.\",\n          \"Click the Trash-can icon to delete office from data grid (temporary).\",\n          // \"Click on Add New Office to add empty row to data grid at the end (temporary).\",\n          \"Double click on data grid cell to edit and press enter to finish making changes (temporary).\",\n        ].map((info, idx) => (\n          <li key={idx}>\n            <p>{info}</p>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n\n  return (\n    <>\n      <Button variant=\"contained\" onClick={handleOpen}>\n        Help\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 400,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nexport default function CustomizedInputBase({ onSearch, count }) {\n  const classes = useStyles();\n\n  return (\n    <Paper\n      component=\"form\"\n      className={classes.root}\n      onSubmit={(e) => {\n        e.preventDefault();\n        const searchVal = e.target.search.value;\n        onSearch(searchVal.toLowerCase());\n        console.log({ searchVal });\n      }}\n    >\n      <InputBase\n        name=\"search\"\n        className={classes.input}\n        placeholder=\"Search Office Access\"\n        inputProps={{ \"aria-label\": \"search office access\" }}\n      />\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"search\"\n      >\n        <SearchIcon />\n      </IconButton>\n\n      <>\n        <Divider className={classes.divider} orientation=\"vertical\" />\n        <h6>{count} offices found</h6>\n      </>\n    </Paper>\n  );\n}\n","export function is_val_in_row(row, val) {\n  for (let cellVal of Object.values(row))\n    if (cellVal && cellVal.toString().toLowerCase().indexOf(val) > -1)\n      return true;\n  return false;\n}\n\nexport function transform_data_to_rows(columns) {\n  return (row) =>\n    row.reduce((acc, val, idx) => {\n      acc[columns[idx]] = val;\n      return acc;\n    }, {});\n}\n\nexport function get_rows(data) {\n  return data.data.map(transform_data_to_rows(data.columns));\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { SERVER_BASE_PATH } from \"./constants\";\nimport { evalResponce } from \"./utils\";\nimport DataGrid from \"react-data-grid\";\nimport \"react-data-grid/dist/react-data-grid.css\";\nimport Loading from \"./Loading\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AutoSizer } from \"react-virtualized\";\nimport Info from \"./Info\";\nimport Search from \"./Search\";\nimport { is_val_in_row, get_rows } from \"./logic\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n  },\n  titleBar: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 64,\n    padding: 8,\n  },\n  actionItems: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexDirection: \"row-reverse\",\n    display: \"flex\",\n    flex: 1,\n  },\n}));\n\nfunction App() {\n  const [rows, setRows] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [columns, setColumns] = useState([]);\n  const [data, setData] = useState(null);\n  const classes = useStyles();\n\n  const callApi = useCallback((url, options = {}) => {\n    options = Object.assign({}, options, {\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n    setIsLoading(true);\n    setError(null);\n\n    fetch(url, options)\n      .then(evalResponce)\n      .then((data) => {\n        let columns = data.columns.map((name, idx) =>\n          Object.assign(\n            {\n              key: name,\n              name: name,\n              editable: true,\n              resizable: true,\n            },\n            idx === 0 ? { frozen: true } : { width: 250 }\n          )\n        );\n        const deleteAction = {\n          key: \"Action\",\n          name: \"\",\n          frozen: true,\n          formatter: ({ rowIdx }) => {\n            const handleDelete = (rowIdx) => {\n              callApi(`${SERVER_BASE_PATH}/api/brocker-office/${rowIdx}`, {\n                method: \"DELETE\",\n              });\n            };\n            return (\n              <IconButton\n                aria-label=\"delete\"\n                onClick={() => handleDelete(rowIdx)}\n              >\n                <DeleteIcon fontSize=\"small\" />\n              </IconButton>\n            );\n          },\n        };\n        columns = [deleteAction].concat(columns);\n\n        const rows = get_rows(data);\n\n        setIsLoading(false);\n        setColumns(columns);\n        setRows(rows);\n        setData(data);\n      })\n      .catch((e) => {\n        setIsLoading(false);\n        setError(e);\n      });\n  }, []);\n\n  useEffect(() => {\n    callApi(`${SERVER_BASE_PATH}/api/brocker-office`);\n  }, [callApi]);\n\n  const handleEdit = ({ action, fromRow, toRow, updated }) => {\n    if (action === \"CELL_UPDATE\" && fromRow === toRow) {\n      const row = data.columns.map((colName) => {\n        return colName in updated ? updated[colName] : rows[fromRow][colName];\n      });\n      callApi(`${SERVER_BASE_PATH}/api/brocker-office/${fromRow}`, {\n        method: \"PUT\",\n        body: JSON.stringify(row),\n      });\n    }\n  };\n\n  // const handleAddNew = () => {\n  //   callApi(`${SERVER_BASE_PATH}/api/brocker-office`, {\n  //     method: \"POST\",\n  //     body: JSON.stringify(Array(data.columns.length).fill(\"\")),\n  //   });\n  // };\n\n  const handleUpload = () => {\n    callApi(`${SERVER_BASE_PATH}/api/brocker-office/azure`, {\n      method: \"PUT\",\n    });\n  };\n\n  const handleClear = () => {\n    callApi(`${SERVER_BASE_PATH}/api/brocker-office/local`, {\n      method: \"DELETE\",\n    });\n  };\n\n  const actionItems = (\n    <div className={classes.actionItems}>\n      {/* <Button variant=\"contained\" onClick={handleAddNew}>\n        Add New Office\n      </Button> */}\n      <Button variant=\"contained\" color=\"primary\" onClick={handleUpload}>\n        Save\n      </Button>\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleClear}>\n        Refresh\n      </Button>\n      <Info />\n      <Search\n        onSearch={(val) => {\n          const initialRows = get_rows(data);\n          const filteredRows = val\n            ? initialRows.filter((row) => is_val_in_row(row, val))\n            : initialRows;\n          setRows(filteredRows);\n        }}\n        count={rows.length}\n      />\n    </div>\n  );\n\n  const header = (\n    <div className={classes.titleBar}>\n      <h1>Office Access</h1>\n      {actionItems}\n    </div>\n  );\n\n  if (isLoading) return <Loading />;\n  if (error)\n    return (\n      <div>\n        <h1>Error</h1>\n        <h2>{error.message}</h2>\n      </div>\n    );\n  return (\n    <div className={classes.root}>\n      {header}\n      <AutoSizer>\n        {({ width, height }) => (\n          <div\n            style={{\n              paddingLeft: 8,\n              paddingRight: 8,\n            }}\n          >\n            <DataGrid\n              columns={columns}\n              rows={rows}\n              width={width - 16}\n              height={height - 100}\n              rowHeight={40}\n              onRowsUpdate={handleEdit}\n              emptyRowsRenderer={EmptyRowsRenderer}\n            />\n          </div>\n        )}\n      </AutoSizer>\n    </div>\n  );\n}\n\nfunction EmptyRowsRenderer() {\n  return <div style={{ textAlign: \"center\" }}>Nothing to show</div>;\n}\n\nexport default App;\n","const DEV_SERVER_PORT = 8000;\nexport const SERVER_BASE_PATH =\n  process.env.NODE_ENV === \"production\"\n    ? \"\"\n    : `http://localhost:${DEV_SERVER_PORT}`;\n","import React from \"react\";\nimport \"./App.css\";\nimport File from \"./File\";\n\nfunction App() {\n  return <File />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}